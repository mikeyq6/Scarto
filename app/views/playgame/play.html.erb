<h1>Playing!</h1>

<h4>Welcome <%= @gameObj.firstname %>

<h5>It is currently <%= @game.state.current_player.name %>'s turn</h5>

<h4>Players: </h4>

<div class="players row">
    <% @game.players.each do |p| %>
    <% if p.type == 1 %>
    <div class="player type-computer col-6">
        <h4 class="<%= @game.state.first_player.name == p.name ? "first" : "" %>"><%= p.name %></h4>

        <div class="hand">
            <% p.hand.each do |card| %>
            <div class="gamecard">
                <%= image_tag(card.generate_image_name(p.type), class: 'card_img') %>
            </div>
            <% end %>
        </div>
    </div>
    <% end %>
    <% end %>
</div>

<div class="playing-field"
    ondrop="dragEnd(event)" ondragover="allowDrop(event)"
>
    <% @game.state.current_trick.each do |card| %>
            <div class="gamecard">
                <%= image_tag(card.generate_image_name(Player.HUMAN), id: "#{card.suit}_#{card.number}", class: 'card_img', 
                    'data-suit': card.suit, 'data-number': card.number) %>
            </div>

    <% end %>
</div>

<div class="players row">
    <% @game.players.each do |p| %>
    <% if p.type == 2 %>
    <div class="player type-human col-12">
        <h4 class="<%= @game.state.first_player.name == p.name ? "first" : "" %>"><%= p.name %></h4>

        <div class="hand">
            <% p.hand.each do |card| %>
            <div class="gamecard">
                <%= image_tag(card.generate_image_name(p.type), id: "#{card.suit}_#{card.number}", class: 'card_img', 
                    'data-suit': card.suit, 'data-number': card.number, 
                    draggable: 'true', ondragstart: 'dragStart(event)') %>
            </div>
            <% end %>
        </div>
    </div>
    <% end %>
    <% end %>
</div>

<script>
    document.querySelectorAll('.type-human .gamecard').forEach(
        (el, i) => { 
            el.addEventListener('mouseover', () => { el.classList.add('top'); });
            el.addEventListener('mouseout', () => { el.classList.remove('top'); }); 
        });

    const allowDrop = (ev) => {
        ev.preventDefault();
    };

    const dragStart = (ev) => {
        ev.dataTransfer.setData('text/plain', JSON.stringify(getCardData(ev.target)));
        ev.dataTransfer.effectAllowed = 'copy';
    };

    const dragEnd = (ev) => {
        ev.preventDefault();

        const elData = JSON.parse(ev.dataTransfer.getData('text/plain'));

        let srcEl = {}
        let srcData = {}

        console.log('elData', elData)
        // let targetEl = {}
        // let targetData = {}

        // Make sure the source and target always correspond to the hand and the stock respectively
        // if(ev.target.closest('.stock')) {
        //     srcEl = document.querySelector('#' + elData.id);
        //     srcData = elData
        //     targetEl = ev.target
        //     targetData = getCardData(ev.target);
        // } else {
        //     srcEl = ev.target
        //     srcData = getCardData(ev.target);
        //     targetEl = document.querySelector('#' + elData.id);
        //     targetData = elData
        // }

        // swapCard(srcData, targetData)
        //     .then((responseData) => {
        //         result = JSON.parse(responseData);

        //         if(result.status === 'ok') {
        //             console.log('ok, now do swap')
        //             setCardData(targetEl, srcData);
        //             setCardData(srcEl, targetData);
        //         } else {
        //             createToast(result.errorMessage);
        //         }
        //         console.log('result', result);
        //     })
        //     .catch((result) => {
        //         console.log('result', result)
        //         console.log('failed')
        //             createToast(result);
        //     });
    };

    const getCardData = (cardImgEl) => {
        return {
            id: cardImgEl.id,
            suit: cardImgEl.dataset.suit,
            number: cardImgEl.dataset.number,
            imgSrc: cardImgEl.src
        };
    };

    const createToast = (message) => {
        const toastHtml = `<div id="toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="toast-header">
            <strong class="me-auto">Game Error</strong>
            <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
        <div class="toast-body">
            ${message}
        </div>
        </div>`;

        document.getElementById('toast-container').insertAdjacentHTML("afterbegin", toastHtml);
        const toast = new bootstrap.Toast(document.getElementById('toast'));
        toast.show();
    };

</script>
